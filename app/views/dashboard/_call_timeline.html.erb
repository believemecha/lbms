<%
messages = []
data.each do |log|
  call_start_time = log.call_start_time.in_time_zone("Mumbai")
  now = Time.now

  if call_start_time.to_date == now.to_date
    # Today
    date_string = 'today'
  elsif call_start_time.to_date == now.yesterday.to_date
    # Yesterday
    date_string = 'yesterday'
  elsif (call_start_time >= (now - 1.week)) && (call_start_time.wday != now.wday)
    # Within the week (different day than today)
    date_string = call_start_time.strftime('%A') # Format as "Monday"
  else
    # Other days
    date_string = call_start_time.strftime('%d %b') # Format as "23 May"
  end

  time_string = call_start_time.strftime('%H:%M') # Format as "12:34"

  duration_minutes = log.duration / 60
  duration_seconds = log.duration % 60

  obj = {
    date: "#{date_string} at #{time_string}",
    duration: "#{duration_minutes}m #{duration_seconds}s",
    was_from_user: log.call_type == 'outgoing',
    call_type: log.call_type
  }
  messages << obj
end
%>

<div class="container mt-4 border border-gray-300 max-h-400 overflow-y-scroll">
  <p class="font-bold">Logs</p>
  <% messages.each do |message| %>
    <div class="call-card bg-gray-100 border border-gray-300 rounded-md p-4 my-2">
      <div class="flex items-center">
        <div class="w-full">
          <h5 class="font-semibold text-lg"><%= message[:call_type] %></h5>
          <p class="text-gray-800 font-medium"><%= message[:duration] %></p>
          <p class="text-blue-500"><%= message[:date] %></p>
        </div>
      </div>
    </div>
  <% end %>
</div>
